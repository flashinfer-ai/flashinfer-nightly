name: Nightly-Release

on:
  workflow_dispatch:
    inputs:
      repo:
        description: "repo"
        default: "flashinfer-ai/flashinfer"
      branch:
        description: "branch"
        default: "main"
  schedule:
    - cron: '0 2 * * *'

env:
  TORCH_CUDA_ARCH_LIST: "7.5 8.0 8.9 9.0+PTX"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        cuda: ["12.1", "12.4"]
        torch: ["2.4"]
    runs-on: [self-hosted]
    steps:
      - name: Set default values
        id: set_defaults
        run: |
          echo "[INFO] Event name is '${{ github.event_name }}'"
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "REPO=${{ inputs.repo }}" >> $GITHUB_ENV
            echo "BRANCH=${{ inputs.branch }}" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "REPO=flashinfer-ai/flashinfer" >> $GITHUB_ENV
            echo "BRANCH=main" >> $GITHUB_ENV
          else
            echo "[ERROR] Unsupported event '${{ github.event_name }}'." >&2
            exit 1
          fi
      - uses: actions/checkout@v2
        with:
          repository: ${{ env.REPO }}
          ref: ${{ env.BRANCH }}
          submodules: true
      - name: Build wheel
        run: |
          docker run --rm -t \
              -v "$(pwd)":/app \
              -e FLASHINFER_CI_CACHE=/opt/dlami/nvme/flashinfer/github \
              -e FLASHINFER_CI_CUDA_VERSION=${{ matrix.cuda }} \
              -e FLASHINFER_CI_TORCH_VERSION=${{ matrix.torch }} \
              -e FLASHINFER_GIT_SHA="g$(git rev-parse HEAD | cut -c1-7)" \
              -e TORCH_CUDA_ARCH_LIST="$TORCH_CUDA_ARCH_LIST" \
              -e MAX_JOBS=192 \
              --user $(id -u):$(id -g) \
              pytorch/manylinux-builder:cuda${{ matrix.cuda }} \
              bash /app/scripts/run-ci-build-wheel.sh
        timeout-minutes: 30
      - run: du -h dist/*
      - uses: actions/upload-artifact@v4
        with:
          name: wheel-cuda${{ matrix.cuda }}-torch${{ matrix.torch }}
          path: dist/*

  release:
    needs: build
    runs-on: [self-hosted]
    steps:
      - run: rm -r dist
      - uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true
          pattern: wheel-*
      - run: |
          ls -lah dist/
          tag_version=$(ls dist | sed 's/flashinfer-\(.*g[0-9a-f]\{7\}\).*/\1/' | uniq)
          echo "TAG_VERSION=$tag_version" >> $GITHUB_ENV
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_VERSION }}
          files: dist/flashinfer*.whl
